{"version":3,"sources":["../src/tree.js"],"names":["define","$","url","log","ajax","expandedImage","imageUrl","collapsedImage","Tree","selector","elementRoot","treeRoot","find","data","items","expandAll","length","parents","attr","visibleItems","activeItem","lastActiveItem","filter","starrTogglers","starredDisplay","init","bindEventHandlers","prototype","prepend","clone","thisObj","each","collapseGroup","show","updateStarredElements","starredList","html","countStarred","index","el","item","remove","append","hide","expandGroup","group","children","toggleGroup","toggleItem","current","on","eventname","handler","warning","handleDblClick","e","stopPropagation","handleExpandCollapseClick","handleFilter","filtertext","val","text","indexOf","handleStarredClick","tablename","listItem","call","methodname","args","table","done","response","success","toggleClass","fail","ex","lastexception","dblclick","click","parent","keyup"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Implement an accessible aria tree widget, from a nested unordered list.\n * Based on http://oaa-accessibility.org/example/41/\n *\n * To respond to selection changed events - use tree.on(\"selectionchanged\", handler).\n * The handler will receive an array of nodes, which are the list items that are currently\n * selected. (Or a single node if multiselect is disabled).\n *\n * @module     tool_lp/tree\n * @package    core\n * @copyright  2019 Ferran Recio Calder√≥\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/url', 'core/log', 'core/ajax'], function($, url, log, ajax) {\n    // Private variables and functions.\n    /** @var {String} expandedImage The html for an expanded tree node twistie. */\n    var expandedImage = $('<img alt=\"\" src=\"' + url.imageUrl('t/expanded') + '\"/>');\n    /** @var {String} collapsedImage The html for a collapsed tree node twistie. */\n    var collapsedImage = $('<img alt=\"\" src=\"' + url.imageUrl('t/collapsed') + '\"/>');\n\n    /** @var {String} filterInput The html for a tree search and filter input. */\n    // var filterInput = $('<input type=\"text\"/>');\n    // var starrTogglers = {};\n    // var starredDisplay = {};\n\n    /**\n     * Constructor\n     *\n     * @param {String} selector\n     */\n    var Tree = function(selector) {\n        this.elementRoot = $(selector);\n        this.treeRoot = this.elementRoot.find('[data-tree=root]');\n        if (!this.treeRoot.data('treeinit')) {\n            this.items = this.treeRoot.find('li');\n            this.expandAll = this.items.length < 20;\n            this.parents = this.treeRoot.find('li:has(ul)');\n\n            this.items.attr('aria-selected', 'false');\n\n            this.visibleItems = null;\n            this.activeItem = null;\n            this.lastActiveItem = null;\n\n            this.filter = this.elementRoot.find('[data-tree=filter]');\n            this.starrTogglers = this.elementRoot.find('[data-tree=startoggler]');\n            this.starredDisplay = this.elementRoot.find('[data-tree=starred]');\n            this.init();\n\n            this.bindEventHandlers();\n            this.treeRoot.data('treeinit','true');\n        }\n    };\n    // Public variables and functions.\n\n    /**\n     * Init this tree\n     * @method init\n     */\n    Tree.prototype.init = function() {\n        this.parents.attr('aria-expanded', 'true');\n        this.parents.prepend(expandedImage.clone());\n\n        this.items.attr('role', 'tree-item');\n        this.items.attr('tabindex', '-1');\n        this.parents.attr('role', 'group');\n        this.treeRoot.attr('role', 'tree');\n\n        this.visibleItems = this.treeRoot.find('li');\n\n        //this.filter = filterInput.clone();\n        //this.treeRoot.prepend(this.filter);\n\n        var thisObj = this;\n        if (!this.expandAll) {\n            this.parents.each(function() {\n                thisObj.collapseGroup($(this));\n            });\n            //this.expandGroup(this.parents.first());\n        }\n\n        this.starrTogglers.show();\n        this.updateStarredElements();\n    };\n\n    /**\n     * UPdate starred elements list\n     * @method updateStarredElements\n     */\n    Tree.prototype.updateStarredElements = function() {\n        var thisObj = this;\n        var starredList = thisObj.starredDisplay.find('ul');\n        starredList.html('');\n        var countStarred = 0;\n        this.treeRoot.find('.starred').each(function(index, el) {\n            var item = $(el).clone();\n            item.find('[data-tree=startoggler]').remove();\n            starredList.append(item);\n            countStarred++;\n        });\n        if (countStarred > 0) {\n            thisObj.starredDisplay.show();\n        } else {\n            thisObj.starredDisplay.hide();\n        }\n    };\n\n    /**\n     * Expand a collapsed group.\n     *\n     * @method expandGroup\n     * @param {Object} item is the jquery id of the parent item of the group\n     */\n    Tree.prototype.expandGroup = function(item) {\n        // Find the first child ul node.\n        var group = item.children('ul');\n\n        // Expand the group.\n        group.show().attr('aria-hidden', 'false');\n\n        item.attr('aria-expanded', 'true');\n\n        item.children('img').attr('src', expandedImage.attr('src'));\n\n        // Update the list of visible items.\n        this.visibleItems = this.treeRoot.find('li:visible');\n    };\n\n    /**\n     * Collapse an expanded group.\n     *\n     * @method collapseGroup\n     * @param {Object} item is the jquery id of the parent item of the group\n     */\n    Tree.prototype.collapseGroup = function(item) {\n        var group = item.children('ul');\n\n        // Collapse the group.\n        group.hide().attr('aria-hidden', 'true');\n\n        item.attr('aria-expanded', 'false');\n\n        item.children('img').attr('src', collapsedImage.attr('src'));\n\n        // Update the list of visible items.\n        this.visibleItems = this.treeRoot.find('li:visible');\n    };\n\n    /**\n     * Expand or collapse a group.\n     *\n     * @method toggleGroup\n     * @param {Object} item is the jquery id of the parent item of the group\n     */\n    Tree.prototype.toggleGroup = function(item) {\n        if (item.attr('aria-expanded') == 'true') {\n            this.collapseGroup(item);\n        } else {\n            this.expandGroup(item);\n        }\n    };\n\n    /**\n     * Toggle the selected state for an item back and forth.\n     *\n     * @method toggleItem\n     * @param {Object} item is the jquery id of the item to toggle.\n     */\n    Tree.prototype.toggleItem = function(item) {\n        var current = item.attr('aria-selected');\n        if (current === 'true') {\n            current = 'false';\n        } else {\n            current = 'true';\n        }\n        item.attr('aria-selected', current);\n    };\n\n    /**\n     * Attach an event listener to the tree.\n     *\n     * @method on\n     * @param {String} eventname This is the name of the event to listen for. Only 'selectionchanged' is supported for now.\n     * @param {Function} handler The function to call when the event is triggered.\n     */\n    Tree.prototype.on = function(eventname, handler) {\n        if (eventname !== 'selectionchanged') {\n            log.warning('Invalid custom event name for tree. Only \"selectionchanged\" is supported.');\n        } else {\n            this.treeRoot.on(eventname, handler);\n        }\n    };\n\n    /**\n     * Handle a double click (expand/collapse).\n     *\n     * @method handleDblClick\n     * @param {Object} item is the jquery id of the parent item of the group\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n    Tree.prototype.handleDblClick = function(item, e) {\n        // Expand or collapse the group.\n        this.toggleGroup(item);\n        e.stopPropagation();\n        return false;\n    };\n\n    /**\n     * Handle a click (select).\n     *\n     * @method handleExpandCollapseClick\n     * @param {Object} item is the jquery id of the parent item of the group\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n    Tree.prototype.handleExpandCollapseClick = function(item, e) {\n        // Do not shift the focus.\n        this.toggleGroup(item);\n        e.stopPropagation();\n        return false;\n    };\n\n    /**\n     * Handle a filter apply.\n     *\n     * @method handleClick\n     * @param {Object} filter is the jquery id of the filter element\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n    Tree.prototype.handleFilter = function(e) {\n        var thisObj = this;\n        var filtertext = this.filter.val();\n        if (filtertext == '') {\n            this.items.each(function() {\n                $(this).show();\n            });\n            this.parents.each(function() {\n                $(this).show();\n                thisObj.collapseGroup($(this));\n            });\n        } else {\n            this.items.each(function() {\n                if ($(this).text().indexOf(filtertext) != -1 ){\n                    $(this).show();\n                } else {\n                    $(this).hide();\n                }\n            });\n            this.parents.each(function() {\n                thisObj.expandGroup($(this));\n            });\n        }\n        e.stopPropagation();\n        return false;\n    };\n\n    /**\n     * Handle a starred toggler.\n     *\n     * @method handleExpandCollapseClick\n     * @param {Object} item is the jquery id of the parent item of the group\n     * @param {Event} e The event.\n     * @return {Boolean}\n     */\n    Tree.prototype.handleStarredClick = function(item, e) {\n        var thisObj = this;\n        var tablename = item.data('tablename');\n        var listItem = item.parents('.dbtable');\n        if ( tablename!=undefined) {\n            ajax.call([{\n                    methodname: 'tool_navdb_starred_table',\n                    args: {table: tablename},\n                    done: function (response) {\n                        if (response.success == true) {\n                            listItem.toggleClass('starred');\n                            thisObj.updateStarredElements();\n                        }\n                    },\n                    fail: function (ex) {\n                        thisObj.lastexception = ex;\n                    }\n                }]);\n        }\n        if (e != undefined) {\n            e.stopPropagation();\n        }\n        return false;\n    };\n\n    /**\n     * Bind the event listeners we require.\n     *\n     * @method bindEventHandlers\n     */\n    Tree.prototype.bindEventHandlers = function() {\n        var thisObj = this;\n\n        // Bind a dblclick handler to the parent items.\n        this.parents.dblclick(function(e) {\n            return thisObj.handleDblClick($(this), e);\n        });\n\n        // Bind a toggle handler to the expand/collapse icons.\n        this.items.children('img').click(function(e) {\n            return thisObj.handleExpandCollapseClick($(this).parent(), e);\n        });\n\n        // bind filter\n        this.filter.keyup(function(e) {\n            return thisObj.handleFilter(e);\n        });\n\n        // star togglers\n        this.starrTogglers.click(function(e) {\n            return thisObj.handleStarredClick($(this), e);\n        });\n    };\n\n    return Tree;\n});\n"],"file":"tree.min.js"}